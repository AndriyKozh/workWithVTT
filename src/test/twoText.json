"hey guys how's it going i'm back here with another video of my series where i teach you guys how to make a credit application from the beginning and i know the last video was pretty long it was like minutes long but i think this is the last video of my series so currently we can read like everything from the database and we can also insert everything in our and what we need to do left is maybe i'm thinking like trying to to make a way so that whenever you add a movie to our database you don't need to refresh the page because currently for if i write here fast and furious right and i come here and write very good and i nothing appears you need to refresh the page so that it will fetch the new information from the database why is this happening basically we are only wait let me come to app js we're only getting the information whenever the use effect hook is called and this only happens once whenever the page is rendered so we need to fix that so that whenever we just click here we don't need to refresh the page and this is basically one of the best things that react can do and we're going to take advantage of that and also i'm thinking we need to style this a bit so that we can have like a card for each movie and in each card there's going to be maybe an update button and a delete button so we can finish the aspect of our application which like up it means basically update and delete and i think that's it so the first thing we're going to do is we're going to make the application be able to update itself consistently so let's come here and you know that we have a movie review this is basically the the list that is displaying right here with all the names so whenever we click on submit review i simply want to add the the new movie that i'm that i'm submitting into that list so i'll just grab set movie list and i'll come here and i'll erase this and i'll set the movie list equal to the current movie list so movie list and i'm also going to add some dots before it so want to add the new movie that we're adding to our database which is basically an object with the movie name and the movie review so um movie name equals to the current movie and review i think it's review let me look at the object um let me see when we're displaying it's a movie name and movie review okay so movie review is equal to review so now whenever we're adding something to the database we're also after after making the post request request we're also setting the movie list with equal to the same movie list but pushing a new element which is the one we're submitting to our database and let's try this again so if i add a for example uh let me think of a movie um i don't know hobbit and i give it a review nice movie and i press submit you can see nothing happens why is it happening let me let me look at the inspect element um each child this isn't the problem let me refresh it and if we refresh it it works but why is it not working okay guys i fixed it basically i was setting everything on the promise basically after the post request there a dot then and that wasn't working so what i would recommend is just separating both so make the excuse post request over here and then set the movie list so if i come here and write the name of a random movie like percy and you can see like there's no percy jackson here um nice movie and i press submit now percy jackson appears here and i don't need to refresh my page so basically that's it so what i'm thinking we need to do now is style this a bit because you're you're seeing that it's like taking a lot of space it's not it's not visually uh pleasing and also like we need to make it into some cards right so let's create a card right here so um over here we're going instead of just making it making it uh h i'm going to make it a div and the div will have a class name of um card and then inside of here there's going to be a an h which is basically going to be the and there's no not like i'm going to erase this movie name part because we're gonna try to make it a little bit prettier so we're just putting the movie name on the top and on the bottom we're we're adding the review as like a description so let me just create a paragraph tag and i'm gonna even erase the movie review uh label so let's look at this you can see this is basically how it's gonna it's gonna have the title and on the bottom the the little review right but we're gonna make this look better so i'm gonna grab here and call the card and make it um let me think a width of like pixels then a height of like pixels then some borders so border two pixels and black let's make it simple and let's add a border radius because i always think they look nice so border radius of like pixels let's take a look at how it's looking it's a bit too big so i'm gonna make this a hundred and no actually was looking now and i'm adding a margin to this so margin of like pixels okay it's looking cool um i'm thinking of changing the the font just just so we can like add some style to it font family and i'm gonna grab something over here i'm gonna use trebuchet i think this is the name i feel like this like i know this font is really cool so you can see that everything now looks pretty good and let me think what else we can do maybe now we need to add the two buttons right the button for delete and the button for update so let's come to the bottom here and edit button delete and let's add another but let's actually add a um how do i say this let's just add an input right so input with type and this is going to be the update input so whatever right here is basically going to be whatever we want to change and we're only going to be able to change the movie review i'm not going to make it so that you can update the title because that doesn't make like that doesn't make so and this button is going to be update okay let's look how it looks it looks pretty horrible you know why because we need to grab the it's not like it's basically making the input huge because i set the inputs here to be huge so that this looks good so what i'm going to do is i'm going to add an id for this so um id and this id is basically going to be update input and we're going to style it on our own so if we come here and write update input and let me say width is equal to like pixels maybe something like that and height is equal to something small like pixels um let's look how it looks um it's still not that good i need to increase maybe the size of the the card yeah i'm gonna make this let's see how it looks now it still doesn't look good maybe decrease the size of of these things make this um and add a margin to this a margin bottom so margin bottom of like pixels let's see how it looks it's still the same so i'm gonna just increase this to and i think this this should be good yeah so we have our delete button we have our update but our update input and our update button right so let's make it so that whenever you click delete you can delete everything here so let's come here and create a function called delete review const delete review equal to like the arrow syntax and let's make an x use dot delete request and instead of here we're going to set our url i'm going to just copy this and set it right here we're going to set it equal to a slash api slash delete because we're going to create that and let's send a variable maybe just the the movie name movie name and now actually i'm thinking the idea no but we're not setting the id okay so let's just send the movie name and that should be good so let's go to our back end and let's create a app delete api endpoint right so and this is going to be as we mentioned before slash api slash delete and there's going to be require a response and we're going to create a function out of it so we're going to grab first the the movie name so const name equal to rec the body dot movie name and let's create the sql syntax for this right so let's come here and insert into movie we're gonna change basically this is going to be delete from the name of the database the name of the table so movie reviews and where and this is the case right so where movie name equal to whatever we're setting right so let's grab movie name and i'm going to explain this better movie name equal to question mark so basically what we're saying here is delete from the table where the movie is equal to the movie name that we set over here so we're deleting whatever movie has this name and if we come here the reason why we're putting a question mark as i said in the last video is so that we can sanitize our input so we can just set the variable here instead of directly inside of the the string and this is important for for various different reasons so if i come here and put database query and i add the sql oh i'm going to change this name so ask ql delete and i add this variable here and then on the side i add the name and as you can see like since this is only taking one variable i don't need to create a an array like i created last time because this time i was setting two variables two question marks and this one i'm only setting once and that also comes into place when i'm when i'm sending the data through the access request as you can see on the actual stop post where we inserted data into the database we're sending two pieces of information the movie name and the movie review that's why we created an object but in this case we're only setting uh one object one one variable which is the movie name so we don't really need to create an object out of it so now we have this function right here right so we have the delete review and we created the app delete route on the back end we just need to then set a a function out of this so error results and let's grab this information and i'm also going to do this so inside of here if we have any error let's console log the error and let's only do this if there is any error so um if error then do this and let's see what happens right so we have the endpoint and we come here and we do this we just need to set the delete review whenever we click the button so let's come to the delete button and press on click equal to delete review right so for example if i'm trying to delete the this review right here i can just come here and press delete and when i refresh the page nothing happens let's see what error appeared so i get what's happening basically we we can't just set an object like this we're going to try to send the object through the parameters of the url itself right so basically instead of just calling it slash api slash delete we're going to call slash api slash a variable and we're going to pass the variable directly on the route and this variable is going to be the movie name so i'm going to remove this and i'm going to even change this quotes to this this type of quote because then we can pass variables inside of this and inside of here we're going to set the movie name but i just realized something as well i was setting the movie name as whatever to object we're trying to but this is incorrect because the movie name represents the variable that is currently being written on the the input right so basically we want to delete the specific uh movie that we're trying to that we're clicking the button so for that we need to pass a variable inside of the delete function so on the on click event i'm going to create this this syntax so that we can pass a variable to our function and over here on the delete review i'm going to pass the value the movie name so that for every delete review we have a different movie that we're passing so if i come here and i create um a name over here like for example movie and instead of movie name i said here movie then now we're sending the correct to our backend and if we come back to our to our back and i'm going to change some stuff on instead of slash api slash delete we're going to make slash api slash delete and we're going to add the following syntax which how you create a way so that you can pass parameters to your your route we're going to add the colon and then the name of your of whatever variable we're passing so we're passing a movie name and over here instead of wreck the body we're grabbing rack params and now this should be completely correct if i come back here and i refresh my browser and i try to delete this right here and i click delete you can see that now it's completely deleted from our database it's deleted from our from our front end it's all correct right so now we have the following project so it's working we have a delete functionality we just need to do one more thing which is create the update functionality so we're coming back to our backend and let's create another route called um another api endpoint sorry called app put and instead of this is going to be the update slash update and we're grabbing we're doing it based on the movie review right so we're grabbing should we actually do it based on no we're doing based on movie name but we're trying to update the movie review so let's change this to an sql update and for those who don't know the the syntax or the command to update stuff under mysql database or any other sql type basically you just need to write update wait update set basically let's think the name of the the table right so movie reviews and the name of the column so we're trying to update movie review is the name of the column equal to question mark and the question mark is something we're going to is the variable that we're going to pass right here so oh i also need to write a where right so where um movie name equals to this so we're saying update the the table movie reviews and set the the column movie review equal to some where the movie name is equal to something so we're specifying which column we want to change based on the movie name and for that reason we need to grab two things we need to grab the movie name and the movie and the movie review right so movie and we're not gonna use params we're gonna use buddy so wreck the body and correct the body the movie review it's going to be really similar to the insert statement and over here we're not we're not passing only one variable so we need to pass an array and we need to put it in order right so the first variable that we're asking is the movie review so we're going to pass the review and the second one is the name okay and we're going to change this to sql update and this should be working so basically i forgot to mention this is this is the the four different ways you can treat an http request you can get information which is the the read part of the crud you can post information which is the the insert part or the create part then whenever you want to delete there's the delete and whenever you want to update there's the put so this is how you you always work with the different http requests so let's go to our front and let's create a function called um update review update review and let's grab here and let's try to make let's try to pass a variable we're passing the movie name so yeah let's let's still use movie and instead of this let's change it to xs put and let's remove this let's make it a simple url without any params and this is going to be api update right and let's pass another variable just like we did on the app post because we can do this for the update let's create a state right we need to create a state for the variable that we're currently like the input that we're currently currently trying to change so like let's come here and write const um new review and set new review and let's create a use state and set it equal to an empty string right so um whenever we work whenever on the whenever we change the input we want to set the let me right here so when i set the set the new review equal to the event which we didn't create yet so e dot target dot value right this is really simple this is what we did on the other inputs in our application and now we're setting the new review equal to this we also want to um whenever we finish this we want to clear so set our new review variable equal to an empty string so that we can use it again if we're trying to update different movie reviews right so set new review equal to an empty stream because whenever we finish sending this we're using the same variable for every single movie review so we want to set it equal to we want to clear it you know so this should be right and the movie we're passing the movie and the review we're passing the new review so let's also create an unclick event for this just like we did for the delete button because we're going to pass a variable here and let me write update review and we're going to pass the move the value the movie name right just like the the delete button so i have a feeling that this should be working but as i mentioned something there there's always something wrong so let's try this i'm going to refresh everything and i want to change the review from good movie to awesome movie and let me click update let's refresh the screen and it didn't work let's look at what happened so and we're back it didn't take long uh i i of already knew when i looked at my code again i already figured it out and as you can see we changed everything basically i wrote the sql statement wrong it's not update set the name of the table and the columns it's update the name of the table set the columns where movie name is equal to this it's really simple i don't know why i did that but that's okay so you can see that if i come here and first of all i'm going to delete all the smurfs so okay and if i want to a harry potter to the best movie franchise in his story of cinema and i click update and i refresh the page you can see that it correctly updated everything and it will keep it that way because we're updating it in our database and i don't know if this video is too long but we created our whole credit so yeah i hope you guys enjoyed this video i hope you guys like this series um i'm still thinking of making some series where i actually make it look because i know this this looks like but i'm trying to just focus on functionality but i'm also really interested in working on the front end with doing some css so i'm definitely thinking of doing some series where i teach you guys how to work with that in a better and more more like appealing way you know if you know what i mean so i hope you guys enjoyed this it was really nice doing this for you guys and if you have any any questions any doubts please leave a comment down below if you enjoyed this please like this video and i see you guys next time"
